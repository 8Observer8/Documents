Конечный результат разработки ПО на Qt

Привет!

У меня нет полного понимания того, что является конечным результатом разработки ПО.

Выражу своё мнение. По ходу повествования написаны вопросы.

1. [b]Исполняемый файл со статической сборкой.[/b] Создаётся один исполняемый файл, который весит, как минимум ~20 МБайт (для GUI-приложения). Запускается без каких либо зависимостей (к примеру, от libstdc++-6.dll, libgcc_s_dw2-1.dll, Qt5Core.dll, Qt5Gui.dll). Гарантировано - на любой машине. Для того чтобы создать статический exe-файл, нужно перекомпилировать библиотеку Qt в статическую сборку (по умолчанию библиотека динамическая). Далее из Qt Creator'а можно будет выбирать, как собрать разрабатываемое приложение: статически или динамически

Я знаком, только с ОС Windows, поэтому вопросы:

- Какое расширение у исполняемых файлов на Linux? В Linux все динамические библиотеки с расширением ".a"? Так?

- Какое расширение у исполняемых файлов на Mac OS? Какое расширение у динамических библиотек в Mac OS?

Как я понимаю, для Windows, Linux и Mac OS можно писать программы, которые достаточно перекомпилировать на соответствующей платформе, не меняя при этом код. Перекомпилировать этот код написанный для компьютера (для трёх ОС) под Android и другие поддерживаемые мобильные платформы мы не можем. Между мобильными платформами то же существует переносимость (с перекомпиляцией)? Какие мобильные платформы поддерживает Qt 5.2.0?

2. [b]Исполняемый файл с динамической сборкой.[/b] Чтобы запустить приложение на другой машине, рядом с exe должны быть библиотеки, например, для GUI-приложения: libstdc++-6.dll, libgcc_s_dw2-1.dll, Qt5Core.dll, Qt5Gui.dll

3. [b]Классы.[/b] В этом случае продуктом разработчика будут: классы, документация (сгеренированная с помощью doxygen, в которой также есть диаграммы классов), тесты для методов-членов классов (тесты подтверждают требуемую функциональность классов)

4. [b]Динамическая библиотека.[/b] Пока не знаю, как создавать динамическую библиотеку и обеспечить повторное использование её.

5. [b]Статическая библиотека.[/b] Пока не знаю, как создавать статическую библиотеку и обеспечить повторное использование её.

6. Мастер установки (инсталятор). Скопирует все необходимые динамические (статические?) библиотеки в указанное пользователем место.

Что здесь неверно? Что пропустил? Как ещё может оформить разработчик результаты своего труда? Расскажите о своём опыте представления конечного результата своего труда пользователю (заказчику).

По мере познания и появления вопросов буду здесь отписываться.

Заранее спасибо за ответы!


Какие по ТЗ могут быть варианты? Я их все перечислил?
